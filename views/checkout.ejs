<%- include("./partials/header") %>
<div class="container">
    <div class="row">
        <div class="col-md-offset-3 col-md-6">
            <h1 id="pay">Payment</h1>
            <hr>
            <br/><br/>
            <form id="payment-form">
              <div class="thumbnail">
                <br>
                <div id="card-element">
                  <!-- Elements will create input elements here -->
                </div>
              
                <!-- We'll put the error messages in this element -->
                <div id="card-errors" role="alert"></div>
                <br>
              </div>
             
                <br>
                <br>
                
                <div class="text-center">
                    <a href="/bookshopper/<%=books._id%>/cart/checkout/thankyou" id="submit" class="btn btn-primary btn-lg" style="width: 140px;">Pay</a>
                </div>
                
              </form>
              <hr>
        </div>
    </div>
</div>


<script>
    var clientSecret="<%=client_secret%>";
    var orderData = {
  items: [{ id: "Books Payment" }],
  currency: "inr"
};
    // Set your publishable key: remember to change this to your live publishable key in production
// See your keys here: https://dashboard.stripe.com/account/apikeys
var stripe = Stripe('pk_test_tJgJ3LsyxuxdWPMXmn5d5GsL00lN4K9rLW');
var elements = stripe.elements();
// Set up Stripe.js and Elements to use in checkout form
var style = {
  base: {
    color: "#32325d",
  }
};

var card = elements.create("card", { style: style });
card.mount("#card-element");

cardElement.on('change', function(event) {
  var displayError = document.getElementById('card-errors');
  if (event.error) {
    displayError.textContent = event.error.message;
  } else {
    displayError.textContent = '';
  }
});


var form = document.getElementById('payment-form');

form.addEventListener('submit', function(ev) {
  ev.preventDefault();
  stripe.createPaymentMethod("card",card)
  .then(function(result) {
      if (result.error) {
        displayError.textContent = result.error.message;
        showError(result.error.message);
      } else {
        orderData.paymentMethodId = result.paymentMethod.id;

        return fetch("/bookshopper/:id/cart/pay", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify(orderData)
        });
      }
    })
    .then(function(result) {
      return result.json();
    })
    .then(function(response) {
      if (response.error) {
        var displayError=document.getElementById("card-errors");
        displayError.textContent=response.error;
      } else {
      }
    });
  stripe.confirmCardPayment(clientSecret, {
    payment_method: {
      card: card,
      billing_details: {
        name: 'Jenny Rosen'
      }
    }
  }).then(function(result) {
    if (result.error) {
      // Show error to your customer (e.g., insufficient funds)
      console.log(result.error.message);
    } else {
      // The payment has been processed!
      if (result.paymentIntent.status === 'succeeded') {
 
        // Show a success message to your customer
        // There's a risk of the customer closing the window before callback
        // execution. Set up a webhook or plugin to listen for the
        // payment_intent.succeeded event that handles any business critical
        // post-payment actions.
      }
    }
  });
});

</script>

<%- include("./partials/footer") %>